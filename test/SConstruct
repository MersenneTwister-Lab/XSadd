# -*- mode:python -*-
# scons construct file
# see http://www.scons.org/
#

#
# set LINUX environment variables
#
import sys,os
sys.path.append('./')
import localSconsLib

include_path = localSconsLib.getOSIncPath()
library_path = localSconsLib.getOSLibPath()
unit_test_path = localSconsLib.getSubPath('UnitTest++.h',
                                          include_path,
                                          'UnitTest++')
if unit_test_path:
    include_path.append(unit_test_path)
#
# setting for this project
#
include_option = ['.', '../']
library_option = []
optlib = ['ntl', 'UnitTest++']
env = Environment(CFLAGS=['-Wall', '-O3', '-std=c99',
                          '-Wmissing-prototypes', '-Wextra'],
                  CXXFLAGS=['-Wall', '-g', '-O3', '-ansi', '-Wextra',
                            '-D__STDC_CONSTANT_MACROS',
                            '-D__STDC_FORMAT_MACROS'])
env.Append(LIBPATH=library_path + library_option)
env.Append(CPPPATH=include_path + include_option)

common_files = ['main.cpp']
test1_files = ['test_f2.cpp']
test2_files = ['test_jump.cpp']
#
# Library check
#
conf = Configure(env)
if not conf.CheckLib('ntl'):
    print 'Did not find libntl.a or ntl.lib, exiting!'
    Exit(1)
#if (not conf.CheckLib('UnitTest++') and
#        (not libcheck('UnitTest++', library_path))) :
#    print 'Did not find UnitTest++ library.'
#    Exit(1)
if conf.CheckHeader('gf2x.h'):
    optlib.append('gf2x')
if conf.CheckLib('gmp'):
    optlib.append('gmp')
env = conf.Finish()

#
# target build
#
if unit_test_path:
    test1 = env.Program('test1',
                        test1_files + env.Object(common_files),
                        LIBS=optlib)
    Command("test1.passed", test1, localSconsLib.runUnitTest)
    test2 = env.Program('test2',
                        test2_files + env.Object(common_files),
                        LIBS=optlib)
    Command("test2.passed", test2, localSconsLib.runUnitTest)
    debug1 = env.Program('debug1',
                        ['debug_xsadd_jump.cpp'],
                        LIBS=optlib)
else:
    print 'Did not find UnitTest++ Header.'
    print 'Skipping unit test.'
